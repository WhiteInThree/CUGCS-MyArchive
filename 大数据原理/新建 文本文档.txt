在映射阶段，每个网格的ID和主题层的列表
网格中的多边形是一个输入键值对。然后，网格中的主题层多边形和其中的剪辑层多边形是
两两检验它们是否可能重叠
一旦当前的两个有这样的可能性，映射任务产生中间键值对
每个由剪辑图层多边形的ID和主题组成
层某人的ID。在缩减阶段，中间键值对在剪辑层多边形中是相同的
ID被同一个reduce任务接受。结果，每个
Reduce任务获取包含剪辑的键值对
图层多边形的ID和所有主题多边形的ID列表
在这个格子里。之后，进行GPC相交计算
调用剪辑图层多边形和每个主题多边形。
如果结果多边形存在，它/它们将被添加到
输出。
在第一个MapReduce过程中，使用MBR进行约简
GPC相交计算次数。伪代码
该过程的过程如图7所示。在这个图中，列表
表示网格中主题层多边形的列表，Listc表示剪辑层多边形的列表，为
输出多边形的集合。
下面给出了两个MapReduce过程的示例
在下面。主题层如图8所示，而剪辑层如图8所示
如图9所示。在这些图中，每层有四个网格。
每个多边形都以图形形式给出其MBR。结果
叠加层分析如图10所示。的过程
得到的结果层如图11和图12所示。前
的MapReduce过程
栅格索引，而另一个则是第二个用于叠加的索引
计算。。
首先，主体层多边形编码从101到109
都提交给主机，那么映射阶段什么时候开始
所有资源随机分为四个任务。后
接收到多边形的ID及其数据后，每个映射任务生成一个由网格组成的中间键值对
的任务。这些多边形执行与网格的相交测试
ID和表示多边形间的多边形ID
所以不与网格相交的是
用网格分割。随后是中间键值
从键值对列表中删除。的网格索引
具有相同网格ID的对被输入到相同的reduce中
剪辑层多边形建立。建立网格索引的结果
如图11所示为叠加计算的地图输入
阶段。这个映射任务的输出是剪辑层多边形的ID和有可能与前者相交的主题层的ID的中间键值对。在
Reduce阶段，每个任务都具有中间键值对
剪辑图层多边形的相同ID。reduce任务的输出
多边形是通过在剪辑层之间做交集吗
多边形和主体多边形。执行的结果
叠加计算如图12所示。